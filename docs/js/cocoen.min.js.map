{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/js/cocoen.js"],"names":[],"mappings":"AAAA;;;;;;;ACAA,IAAM,OAAO,OAAO,MAAP,CAAb;AACA,IAAM,iBAAiB,OAAO,gBAAP,CAAvB;AACA,IAAM,gBAAgB,OAAO,eAAP,CAAtB;AACA,IAAM,oBAAoB,OAAO,mBAAP,CAA1B;;IAEM,M;AACJ,kBAAY,OAAZ,EAAqB,OAArB,EAA8B;AAAA;;AAC5B,SAAK,OAAL,GAAe,OAAO,MAAP,CAAc,EAAd,EAAkB,OAAO,QAAzB,EAAmC,OAAnC,CAAf;AACA,SAAK,OAAL,GAAe,WAAW,SAAS,aAAT,CAAuB,SAAvB,CAA1B;;AAEA,SAAK,IAAL;AACD;;;SAEA,I;4BAAQ;AACP,WAAK,cAAL;AACA,WAAK,aAAL;AACA,WAAK,iBAAL;AACD;;SAEA,c;4BAAkB;AACjB;AACA,UAAM,OAAO,SAAS,aAAT,CAAuB,MAAvB,CAAb;AACA,WAAK,SAAL,GAAiB,KAAK,OAAL,CAAa,mBAAb,CAAiC,OAAjC,CAAyC,GAAzC,EAA8C,EAA9C,CAAjB;AACA,WAAK,OAAL,CAAa,WAAb,CAAyB,IAAzB;AACA;AACA,UAAM,UAAU,SAAS,aAAT,CAAuB,KAAvB,CAAhB;AACA,UAAM,aAAa,KAAK,OAAL,CAAa,aAAb,CAA2B,iBAA3B,CAAnB;AACA,iBAAW,MAAX,CAAkB,OAAlB;AACA,cAAQ,MAAR,CAAe,UAAf;AACA;AACA,WAAK,WAAL,GAAmB,KAAK,OAAL,CAAa,aAAb,CAA2B,KAAK,OAAL,CAAa,mBAAxC,CAAnB;AACA,WAAK,aAAL,GAAqB,KAAK,OAAL,CAAa,aAAb,CAA2B,iBAA3B,CAArB;AACA,WAAK,WAAL,GAAmB,KAAK,aAAL,CAAmB,aAAnB,CAAiC,KAAjC,CAAnB;AACD;;SAEA,a;4BAAiB;AAChB,WAAK,YAAL,GAAoB,SAAS,OAAO,gBAAP,CAAwB,KAAK,OAA7B,EAAsC,KAA/C,EAAsD,EAAtD,CAApB;AACA,WAAK,iBAAL,GAAyB,KAAK,OAAL,CAAa,UAAtC;AACA,WAAK,WAAL,CAAiB,KAAjB,CAAuB,KAAvB,GAA+B,KAAK,YAApC;AACA,WAAK,gBAAL,GAAwB,SAAS,OAAO,gBAAP,CAAwB,KAAK,WAA7B,EAA0C,KAAnD,EAA0D,EAA1D,CAAxB;AACA,WAAK,UAAL,GAAkB,KAAK,iBAAL,GAAyB,EAA3C;AACA,WAAK,UAAL,GAAmB,KAAK,iBAAL,GAAyB,KAAK,YAA/B,GAA+C,KAAK,gBAApD,GAAuE,EAAzF;AACD;;SAEA,iB;4BAAqB;AACpB,cAAQ,GAAR,CAAY,mBAAZ,EAAiC,IAAjC,EADoB,CACoB;AACzC;;;;;;AAGH,OAAO,QAAP,GAAkB;AAChB,uBAAqB;AADL,CAAlB;;AAIA,OAAO,OAAP,GAAiB,MAAjB","file":"cocoen.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","const init = Symbol('init');\nconst createElements = Symbol('createElements');\nconst setDimensions = Symbol('setDimensions');\nconst addEventListeners = Symbol('addEventListeners');\n\nclass Cocoen {\n  constructor(element, options) {\n    this.options = Object.assign({}, Cocoen.defaults, options);\n    this.element = element || document.querySelector('.cocoen');\n\n    this[init]();\n  }\n\n  [init]() {\n    this[createElements]();\n    this[setDimensions]();\n    this[addEventListeners]();\n  }\n\n  [createElements]() {\n    // Create drag element\n    const span = document.createElement('span');\n    span.className = this.options.dragElementSelector.replace('.', '');\n    this.element.appendChild(span);\n    // Wrap first image in div\n    const wrapper = document.createElement('div');\n    const firstImage = this.element.querySelector('img:first-child');\n    firstImage.before(wrapper);\n    wrapper.append(firstImage);\n    // Set class elements we need later\n    this.dragElement = this.element.querySelector(this.options.dragElementSelector);\n    this.beforeElement = this.element.querySelector('div:first-child');\n    this.beforeImage = this.beforeElement.querySelector('img');\n  }\n\n  [setDimensions]() {\n    this.elementWidth = parseInt(window.getComputedStyle(this.element).width, 10);\n    this.elementOffsetLeft = this.element.offsetLeft;\n    this.beforeImage.style.width = this.elementWidth;\n    this.dragElementWidth = parseInt(window.getComputedStyle(this.dragElement).width, 10);\n    this.minLeftPos = this.elementOffsetLeft + 10;\n    this.maxLeftPos = (this.elementOffsetLeft + this.elementWidth) - this.dragElementWidth - 10;\n  }\n\n  [addEventListeners]() {\n    console.log('addEventListeners', this); // eslint-disable-line\n  }\n}\n\nCocoen.defaults = {\n  dragElementSelector: '.cocoen__drag',\n};\n\nmodule.exports = Cocoen;\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJzcmMvanMvY29jb2VuLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7O0FDQUEsSUFBTSxPQUFPLE9BQU8sTUFBUCxDQUFiO0FBQ0EsSUFBTSxpQkFBaUIsT0FBTyxnQkFBUCxDQUF2QjtBQUNBLElBQU0sZ0JBQWdCLE9BQU8sZUFBUCxDQUF0QjtBQUNBLElBQU0sb0JBQW9CLE9BQU8sbUJBQVAsQ0FBMUI7O0lBRU0sTTtBQUNKLGtCQUFZLE9BQVosRUFBcUIsT0FBckIsRUFBOEI7QUFBQTs7QUFDNUIsU0FBSyxPQUFMLEdBQWUsT0FBTyxNQUFQLENBQWMsRUFBZCxFQUFrQixPQUFPLFFBQXpCLEVBQW1DLE9BQW5DLENBQWY7QUFDQSxTQUFLLE9BQUwsR0FBZSxXQUFXLFNBQVMsYUFBVCxDQUF1QixTQUF2QixDQUExQjs7QUFFQSxTQUFLLElBQUw7QUFDRDs7O1NBRUEsSTs0QkFBUTtBQUNQLFdBQUssY0FBTDtBQUNBLFdBQUssYUFBTDtBQUNBLFdBQUssaUJBQUw7QUFDRDs7U0FFQSxjOzRCQUFrQjtBQUNqQjtBQUNBLFVBQU0sT0FBTyxTQUFTLGFBQVQsQ0FBdUIsTUFBdkIsQ0FBYjtBQUNBLFdBQUssU0FBTCxHQUFpQixLQUFLLE9BQUwsQ0FBYSxtQkFBYixDQUFpQyxPQUFqQyxDQUF5QyxHQUF6QyxFQUE4QyxFQUE5QyxDQUFqQjtBQUNBLFdBQUssT0FBTCxDQUFhLFdBQWIsQ0FBeUIsSUFBekI7QUFDQTtBQUNBLFVBQU0sVUFBVSxTQUFTLGFBQVQsQ0FBdUIsS0FBdkIsQ0FBaEI7QUFDQSxVQUFNLGFBQWEsS0FBSyxPQUFMLENBQWEsYUFBYixDQUEyQixpQkFBM0IsQ0FBbkI7QUFDQSxpQkFBVyxNQUFYLENBQWtCLE9BQWxCO0FBQ0EsY0FBUSxNQUFSLENBQWUsVUFBZjtBQUNBO0FBQ0EsV0FBSyxXQUFMLEdBQW1CLEtBQUssT0FBTCxDQUFhLGFBQWIsQ0FBMkIsS0FBSyxPQUFMLENBQWEsbUJBQXhDLENBQW5CO0FBQ0EsV0FBSyxhQUFMLEdBQXFCLEtBQUssT0FBTCxDQUFhLGFBQWIsQ0FBMkIsaUJBQTNCLENBQXJCO0FBQ0EsV0FBSyxXQUFMLEdBQW1CLEtBQUssYUFBTCxDQUFtQixhQUFuQixDQUFpQyxLQUFqQyxDQUFuQjtBQUNEOztTQUVBLGE7NEJBQWlCO0FBQ2hCLFdBQUssWUFBTCxHQUFvQixTQUFTLE9BQU8sZ0JBQVAsQ0FBd0IsS0FBSyxPQUE3QixFQUFzQyxLQUEvQyxFQUFzRCxFQUF0RCxDQUFwQjtBQUNBLFdBQUssaUJBQUwsR0FBeUIsS0FBSyxPQUFMLENBQWEsVUFBdEM7QUFDQSxXQUFLLFdBQUwsQ0FBaUIsS0FBakIsQ0FBdUIsS0FBdkIsR0FBK0IsS0FBSyxZQUFwQztBQUNBLFdBQUssZ0JBQUwsR0FBd0IsU0FBUyxPQUFPLGdCQUFQLENBQXdCLEtBQUssV0FBN0IsRUFBMEMsS0FBbkQsRUFBMEQsRUFBMUQsQ0FBeEI7QUFDQSxXQUFLLFVBQUwsR0FBa0IsS0FBSyxpQkFBTCxHQUF5QixFQUEzQztBQUNBLFdBQUssVUFBTCxHQUFtQixLQUFLLGlCQUFMLEdBQXlCLEtBQUssWUFBL0IsR0FBK0MsS0FBSyxnQkFBcEQsR0FBdUUsRUFBekY7QUFDRDs7U0FFQSxpQjs0QkFBcUI7QUFDcEIsY0FBUSxHQUFSLENBQVksbUJBQVosRUFBaUMsSUFBakMsRUFEb0IsQ0FDb0I7QUFDekM7Ozs7OztBQUdILE9BQU8sUUFBUCxHQUFrQjtBQUNoQix1QkFBcUI7QUFETCxDQUFsQjs7QUFJQSxPQUFPLE9BQVAsR0FBaUIsTUFBakIiLCJmaWxlIjoiZ2VuZXJhdGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbiBlKHQsbixyKXtmdW5jdGlvbiBzKG8sdSl7aWYoIW5bb10pe2lmKCF0W29dKXt2YXIgYT10eXBlb2YgcmVxdWlyZT09XCJmdW5jdGlvblwiJiZyZXF1aXJlO2lmKCF1JiZhKXJldHVybiBhKG8sITApO2lmKGkpcmV0dXJuIGkobywhMCk7dmFyIGY9bmV3IEVycm9yKFwiQ2Fubm90IGZpbmQgbW9kdWxlICdcIitvK1wiJ1wiKTt0aHJvdyBmLmNvZGU9XCJNT0RVTEVfTk9UX0ZPVU5EXCIsZn12YXIgbD1uW29dPXtleHBvcnRzOnt9fTt0W29dWzBdLmNhbGwobC5leHBvcnRzLGZ1bmN0aW9uKGUpe3ZhciBuPXRbb11bMV1bZV07cmV0dXJuIHMobj9uOmUpfSxsLGwuZXhwb3J0cyxlLHQsbixyKX1yZXR1cm4gbltvXS5leHBvcnRzfXZhciBpPXR5cGVvZiByZXF1aXJlPT1cImZ1bmN0aW9uXCImJnJlcXVpcmU7Zm9yKHZhciBvPTA7bzxyLmxlbmd0aDtvKyspcyhyW29dKTtyZXR1cm4gc30pIiwiY29uc3QgaW5pdCA9IFN5bWJvbCgnaW5pdCcpO1xuY29uc3QgY3JlYXRlRWxlbWVudHMgPSBTeW1ib2woJ2NyZWF0ZUVsZW1lbnRzJyk7XG5jb25zdCBzZXREaW1lbnNpb25zID0gU3ltYm9sKCdzZXREaW1lbnNpb25zJyk7XG5jb25zdCBhZGRFdmVudExpc3RlbmVycyA9IFN5bWJvbCgnYWRkRXZlbnRMaXN0ZW5lcnMnKTtcblxuY2xhc3MgQ29jb2VuIHtcbiAgY29uc3RydWN0b3IoZWxlbWVudCwgb3B0aW9ucykge1xuICAgIHRoaXMub3B0aW9ucyA9IE9iamVjdC5hc3NpZ24oe30sIENvY29lbi5kZWZhdWx0cywgb3B0aW9ucyk7XG4gICAgdGhpcy5lbGVtZW50ID0gZWxlbWVudCB8fCBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuY29jb2VuJyk7XG5cbiAgICB0aGlzW2luaXRdKCk7XG4gIH1cblxuICBbaW5pdF0oKSB7XG4gICAgdGhpc1tjcmVhdGVFbGVtZW50c10oKTtcbiAgICB0aGlzW3NldERpbWVuc2lvbnNdKCk7XG4gICAgdGhpc1thZGRFdmVudExpc3RlbmVyc10oKTtcbiAgfVxuXG4gIFtjcmVhdGVFbGVtZW50c10oKSB7XG4gICAgLy8gQ3JlYXRlIGRyYWcgZWxlbWVudFxuICAgIGNvbnN0IHNwYW4gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzcGFuJyk7XG4gICAgc3Bhbi5jbGFzc05hbWUgPSB0aGlzLm9wdGlvbnMuZHJhZ0VsZW1lbnRTZWxlY3Rvci5yZXBsYWNlKCcuJywgJycpO1xuICAgIHRoaXMuZWxlbWVudC5hcHBlbmRDaGlsZChzcGFuKTtcbiAgICAvLyBXcmFwIGZpcnN0IGltYWdlIGluIGRpdlxuICAgIGNvbnN0IHdyYXBwZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICBjb25zdCBmaXJzdEltYWdlID0gdGhpcy5lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJ2ltZzpmaXJzdC1jaGlsZCcpO1xuICAgIGZpcnN0SW1hZ2UuYmVmb3JlKHdyYXBwZXIpO1xuICAgIHdyYXBwZXIuYXBwZW5kKGZpcnN0SW1hZ2UpO1xuICAgIC8vIFNldCBjbGFzcyBlbGVtZW50cyB3ZSBuZWVkIGxhdGVyXG4gICAgdGhpcy5kcmFnRWxlbWVudCA9IHRoaXMuZWxlbWVudC5xdWVyeVNlbGVjdG9yKHRoaXMub3B0aW9ucy5kcmFnRWxlbWVudFNlbGVjdG9yKTtcbiAgICB0aGlzLmJlZm9yZUVsZW1lbnQgPSB0aGlzLmVsZW1lbnQucXVlcnlTZWxlY3RvcignZGl2OmZpcnN0LWNoaWxkJyk7XG4gICAgdGhpcy5iZWZvcmVJbWFnZSA9IHRoaXMuYmVmb3JlRWxlbWVudC5xdWVyeVNlbGVjdG9yKCdpbWcnKTtcbiAgfVxuXG4gIFtzZXREaW1lbnNpb25zXSgpIHtcbiAgICB0aGlzLmVsZW1lbnRXaWR0aCA9IHBhcnNlSW50KHdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKHRoaXMuZWxlbWVudCkud2lkdGgsIDEwKTtcbiAgICB0aGlzLmVsZW1lbnRPZmZzZXRMZWZ0ID0gdGhpcy5lbGVtZW50Lm9mZnNldExlZnQ7XG4gICAgdGhpcy5iZWZvcmVJbWFnZS5zdHlsZS53aWR0aCA9IHRoaXMuZWxlbWVudFdpZHRoO1xuICAgIHRoaXMuZHJhZ0VsZW1lbnRXaWR0aCA9IHBhcnNlSW50KHdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKHRoaXMuZHJhZ0VsZW1lbnQpLndpZHRoLCAxMCk7XG4gICAgdGhpcy5taW5MZWZ0UG9zID0gdGhpcy5lbGVtZW50T2Zmc2V0TGVmdCArIDEwO1xuICAgIHRoaXMubWF4TGVmdFBvcyA9ICh0aGlzLmVsZW1lbnRPZmZzZXRMZWZ0ICsgdGhpcy5lbGVtZW50V2lkdGgpIC0gdGhpcy5kcmFnRWxlbWVudFdpZHRoIC0gMTA7XG4gIH1cblxuICBbYWRkRXZlbnRMaXN0ZW5lcnNdKCkge1xuICAgIGNvbnNvbGUubG9nKCdhZGRFdmVudExpc3RlbmVycycsIHRoaXMpOyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lXG4gIH1cbn1cblxuQ29jb2VuLmRlZmF1bHRzID0ge1xuICBkcmFnRWxlbWVudFNlbGVjdG9yOiAnLmNvY29lbl9fZHJhZycsXG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IENvY29lbjtcbiJdfQ=="}